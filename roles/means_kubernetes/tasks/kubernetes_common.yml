---

- name: 'Disable UFW'
  become: true
  ufw:
    state: disabled

- name: 'k8s packages signing key'
  become: true
  apt_key:
    url: https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version_short }}/deb/Release.key
    keyring: /etc/apt/trusted.gpg.d/kubernetes-apt-keyring.gpg
    state: present

- name: 'Kubernetes repository'
  become: true
  apt_repository:
    repo: 'deb [signed-by=/etc/apt/trusted.gpg.d/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version_short }}/deb/ /'
    state: present
    update_cache: yes
    filename: kubernetes
    mode: 0600


# unattended-upgrades doesn't like this origin name
#
# Origin:Archive pair
# $ grep -iE '^\s*(Archive|Origin)' /var/lib/apt/lists/pkgs.k8s.io_core\:_stable\:_v1.32_deb_InRelease
# Archive: deb
# Origin: obs://build.opensuse.org/isv:kubernetes:core:stable:v1.32/deb
# - name: 'Allow Unattended-upgrade to use Kubernetes Repo'
#   become: true
#   lineinfile:
#     path: /etc/apt/apt.conf.d/50unattended-upgrades
#     regexp: '^\s*(//\s*)?"obs://build.opensuse.org/isv:kubernetes:core:stable:v{{ kubernetes_version_short }}/deb:deb";\s*$'
#     line: '        "obs://build.opensuse.org/isv:kubernetes:core:stable:v{{ kubernetes_version_short }}/deb:deb";'
#     insertafter: '^\s*(//\s*)?"\${distro_id}:\${distro_codename}-backports";$'

- name: 'Kubernetes dependencies'
  become: true
  apt:
    name: 
      - kubernetes-cni
    force_apt_get: yes
    update_cache: yes
    state: present

- name: 'Kubernetes packages'
  become: true
  apt:
    name: 
      - kubelet={{ kubernetes_version }}
      - kubeadm={{ kubernetes_version }}
      - kubectl={{ kubernetes_version }}
    force_apt_get: yes
    update_cache: yes
    state: present

- name: 'Prevent upgrades to kubernetes-cni'
  become: true
  command: apt-mark hold kubernetes-cni
  register: apt_hold_kubernetes_cni
  changed_when: "'kubernetes-cni was already set on hold' not in apt_hold_kubernetes_cni.stdout"

- name: 'Prevent upgrades to kubelet'
  become: true
  command: apt-mark hold kubelet
  register: apt_hold_kubelet
  changed_when: "'kubelet was already set on hold' not in apt_hold_kubelet.stdout"

- name: 'Prevent upgrades to kubeadm'
  become: true
  command: apt-mark hold kubeadm
  register: apt_hold_kubeadm
  changed_when: "'kubeadm was already set on hold' not in apt_hold_kubeadm.stdout"

- name: 'Prevent upgrades to kubectl'
  become: true
  command: apt-mark hold kubectl
  register: apt_hold_kubectl
  changed_when: "'kubectl was already set on hold' not in apt_hold_kubectl.stdout"

- name: 'br_netfilter module enabled'
  become: true
  modprobe:
    name: br_netfilter
    state: present

- name: 'br_netfilter module enabled (permanent)'
  become: true
  ansible.builtin.lineinfile:
    path: /etc/modules-load.d/br_netfilter.conf
    regexp: '^\s*br_netfilter'
    line: 'br_netfilter'
    create: yes

- name: 'net.bridge.bridge-nf-call-iptables'
  become: true
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: "1"
    sysctl_file: /etc/sysctl.d/flannel.conf
    reload: yes

- name: 'Configure containerd with default values'
  become: true
  shell: containerd config default | tee /etc/containerd/config.toml

- name: 'Configure containerd to use Systemd Cgroup Driver'
  become: true
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^\s*SystemdCgroup'
    line: '            SystemdCgroup = true'

- name: 'Restart containerd.service'
  become: true
  systemd:
    name: containerd.service
    state: restarted
