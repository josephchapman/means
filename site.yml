---

- hosts: all

  vars:
    # Flag to be set if a task requires a manual action
    # Manual actions then relayed to user at the end of the play
    logout_required: false

    # Each run of this play creates a new directory named by its timestamp
    # Files which are changed by the play are backed up here
    backup_dir: "{{ ansible_env.HOME }}/.ansible_backups/{{ ansible_date_time.iso8601 }}"

  pre_tasks:
  - block:
    - name: 'Check host is Ubuntu 22.04 (jammy)'
      assert:
        that:
        - ansible_distribution == 'Ubuntu'
        - ansible_distribution_version == '22.04'
        - ansible_distribution_release == 'jammy'
        msg:
        - This Ansible playbook has been designed for Ubuntu 22.04 (jammy)
        - This appears to be {{ ansible_distribution }} {{ ansible_distribution_version }} ({{ ansible_distribution_release }})
        - ABORTING
    - name: 'Create directory for backup files'
      file:
        path: "{{ backup_dir }}"
        state: directory
        owner: "{{ ansible_env.USER }}"
        group: "{{ ansible_env.USER }}"
        mode: 0700
      changed_when: false
    tags:
    - always


  roles:
  - role: means_desktop
    tags:
    - desktop
  - role: means_workstation
    tags:
    - workstation
  - role: means_server
    tags:
    - server
  - role: means_minecraft_server
    tags:
    - minecraft_server
  - role: means_cam_local
    tags:
    - cam_local

  tasks:
  # PulseAudio
  - block:
    - name: 'Add HDMI audio output'
      blockinfile:
        path: /etc/pulse/default.pa
        block: |
          load-module module-alsa-sink device=plughw:0,2
          set-default-sink alsa_output.plughw_0_2
    - name: 'Restart PulseAudio'
      command: pulseaudio -k
      become_user: "{{ ansible_env.USER }}"
      register: pulse_restart
      failed_when: pulse_restart.rc > 1
      changed_when: false
    become: true
    tags:
    - never
    - computestick



  post_tasks:
  - block:
    - name: 'Test for /run/reboot-required'
      stat:
        path: /run/reboot-required
      register: reboot_required
      become: true
    - name: 'Advise if a logout + login is required'
      when: logout_required
      debug:
        msg:
          - '!!!!!'
          - A LOGOUT + LOGIN is required for some changes to take effect
          - '!!!!!'
    - name: 'Advise if a reboot is required'
      when: reboot_required.stat.exists
      debug:
        msg:
          - '!!!!!'
          - A REBOOT is required for some changes to take effect
          - '!!!!!'
    tags:
    - always
